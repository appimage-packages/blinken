#!/bin/bash
#
# Copyright (C) 2016 Scarlett Clark <sgclark@kde.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) version 3, or any
# later version accepted by the membership of KDE e.V. (or its
# successor approved by the membership of KDE e.V.), which shall
# act as a proxy defined in Section 6 of version 3 of the license.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library.  If not, see <http://www.gnu.org/licenses/>.

cd /

# Get helper functions
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh
rm -f functions.sh

mkdir /<%= name %>.AppDir/

# cd /app/src
# git clone git://anongit.kde.org/scratch/brauch/appimage-exec-wrapper
# cd /app/src/appimage-exec-wrapper/
# make clean
# make
# cp -v exec.so /<%= name %>.AppDir/exec_wrapper.so
# rm -rfv  /app/src/appimage-exec-wrapper

cd /
wget https://github.com/probonopd/linuxdeployqt/releases/download/1/linuxdeployqt-1-x86_64.AppImage
chmod a+x linuxdeployqt-1-x86_64.AppImage

cd /<%= name %>.AppDir

#Create AppRun
cat > AppRun << EOF
#!/bin/sh
HERE="$(dirname "$(readlink -f "${0}")")"
export LD_PRELOAD="${HERE}/exec_wrapper.so"
export QML2_IMPORT_PATH="${HERE}/qml:\$QML2_IMPORT_PATH"
export QT_PLUGIN_PATH="${HERE}/plugins"
export LD_LIBRARY_PATH="\$QT_PLUGIN_PATH:${HERE}/lib:\${HERE}/usr/lib:${HERE}/usr/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"
export XDG_DATA_DIRS="${HERE}/share/:${HERE}/usr/share/:\$XDG_DATA_DIRS"
export XDG_CONFIG_DIRS="${HERE}/etc:\$XDG_CONFIG_DIRS"
export PATH="${HERE}/usr/bin:${HERE}/bin:\$PATH"
export KDE_FORK_SLAVES=1
EXEC=$(grep -e '^Exec=.*' "${HERE}"/*.desktop | head -n 1 | cut -d "=" -f 2 | cut -d " " -f 1)
exec "${EXEC}" $@
EOF
chmod +x AppRun

#Move everything except libs into AppDir
mv /app/{etc,share,lib,bin} . || true
mv bin/<%= name %> .
mv share/applications/*<%= name %>*.desktop <%= name %>.desktop
cp share/icons/hicolor/scalable/apps/*<%= name %>* .
cp -rv /opt/usr/share/* ./share/
rm -rfv ./share/cmake-3.7/
#Cleanup
# We don't bundle the developer stuff
rm -rf ./usr/include || true
rm -rf ./usr/lib/cmake || true
rm -rf ./lib/cmake || true
rm -rf ./usr/lib/pkgconfig || true
rm -rf ./usr/share/ECM/ || true
rm -rf ./usr/share/gettext || true
rm -rf ./usr/share/pkgconfig || true
rm -rf ./usr/mkspecs/ || true
rm -rf ./usr/gettext-* || true
rm -rf ./usr/autoconf-* || true
rm -rf ./usr/automake-* || true
rm -rf ./usr/libtool-* || true
find . -name '*.a' -exec rm {} \;
mkdir ./lib
mkdir ./plugins
mv /opt/usr/plugins/kf5/* ./plugins/ || true
cp /usr/lib/x86_64-linux-gnu/pulseaudio/*.so ./lib/
#cp -rv /opt/usr/lib/x86_64-linux-gnu/plugins/* ./plugins/
#update-mime-database ./usr/share/mime/
# Prevent Qt from loading plugins from the system
unset QTPATH
QTPATH=$(find ./plugins -type d)
if [ ! -z $QTPATH ] ; then
cat > ./usr/bin/qt.conf <<EOF
[Paths]
Prefix = $QTPATH
EOF
fi
strip -g $(find -t b) || true
find ./ -type f -executable -exec sed -i -e 's|/usr|././|g' '{}' ';'
export LD_LIBRARY_PATH=/opt/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
../linuxdeployqt-1-x86_64.AppImage <%= name %> -verbose=3 -bundle-non-qt-libs -qmldir=/opt/usr/qml

#All the plugins do not seem to be getting in. Manual copy.
cp -rfv /opt/usr/plugins/{xcbglintegrations,platformthemes,platforminputcontexts,iconengines,styles} ./plugins
glibc_needed
delete_blacklisted
mkdir -p ./usr/bin/
get_desktopintegration <%= name %>

cd /
wget "https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
chmod a+x appimagetool-x86_64.AppImage

ARCH=$(arch)
DATE=$(date +"%m%d%Y")

APPIMAGEFILENAME="<%= name %>-git$DATE-$ARCH.AppImage"

./appimagetool-x86_64.AppImage /<%= name %>.AppDir /appimage/$APPIMAGEFILENAME
